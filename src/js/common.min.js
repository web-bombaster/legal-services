$(document).ready(function() {
	// Адаптивное меню
	//Мобильное меню
var touch = $('#touch-menu'); // кнопка меню
var menu = $('.tgnav'); // ul.tgnav - обертка меню
var dropdown = $('.dropdown'); // li.dropdown - элемент меню, содержищий подменю
var dropdownToggle = $('.dropdown-toggle'); // a.dropdown-toggle - кнопка с подменю
var dropdownMenu = $('.dropdown-menu'); // div.dropdown-menu - контейнер для подменю

// По  клику на кнопке меню показываем меню или скрываем
// var menu = $('.tgnav'); // ul.tgnav - обертка меню
$(touch).on('click', function(e) {
	e.preventDefault(); // Убираем действие по умолчанию
	$(this).next(menu).stop().slideToggle(); // Следующему эл-ту с классом .tgnav даем slideToggle
});

$(window).resize(function() {
	// возвращает видимость меню для ПК если оно было закрыто на мобильной версии
	var wid = $(window).width();
	if (wid > 760 && menu.is(':hidden')) {
		menu.removeAttr('style');
	}
});

// клик по кнопке с подменю
// var dropdownToggle = $('.dropdown-toggle');
$(dropdownToggle).on('click', function(e) {
	e.preventDefault();
	if ($(this).is('.open')) {
		// если кнопка с классом open, то прячем подменю
		$(this).removeClass('open').next().slideToggle(300);
	} else {
		// если закрыто, то ищем ближайший родительский ul, в нем ищем открытые кнопки .dropdown-toggle.open , закрываем их, закрываем ранее открытые подменю
		$(this).closest('ul').find('.dropdown-toggle.open').removeClass('open').next().slideToggle(300);
		$(this).addClass('open').next().slideToggle(300); // Выбранной кнопке добавляем класс open, открываем подменю
	}
});

// Закрываем подменю по клику вне его (и вне кнопки с подменю)
// var touch = $('#touch-menu');
// var menu = $('.tgnav');
// var dropdownToggle = $('.dropdown-toggle');
// var dropdownMenu = $('.dropdown-menu');
// $(function() {
// 	$(document).click(function(e) {
// 		var clickElementClass = e.target.getAttribute('class'); // определяем класс у элемента, по которому кликнули
// 		var clickElementTagName = e.target.tagName; // определяем тег у элемента, по которому кликнули
// 		var clickElement = clickElementTagName + '.' + clickElementClass; // определяем тег у элемента, по которому кликнули
// 		console.log('clickElement > ' + clickElement);cons
// 		событие клика по веб-документу
// 		var dropdownMenu = $('.dropdown'); // указываем элемент
// 		if (
// 			// !dropdown.is(e.target) && // если клик был не по кнопке
// 			!dropdown.is(e.target) && // если клик был не по нашему элементу
// 			dropdown.has(e.target).length === 0 // и не по его дочерним элементам
// 		) {
// 			dropdown.children(dropdownMenu).removeAttr('style');
// 			$(this).children(dropdownMenu).hide();
// 		}
// 	});
// });

// Закрываем мобильное меню по клику вне его
// var touch = $('#touch-menu');
// var menu = $('.tgnav');
$(function() {
	$(document).click(function(e) {
		// событие клика по веб-документу
		// var dropdown = $('.dropdown'); // указываем элемент
		if (
			!touch.is(e.target) && // если клик был не по кнопке открытия меню
			!menu.is(e.target) && // если клик был не по меню
			menu.has(e.target).length === 0 // и не по его дочерним элементам
		) {
			menu.removeAttr('style');
		}
	});
});
// Инициализация слайдеров
	// http://kenwheeler.github.io/slick/

//Слайдер в шапке сайта
$('.bigslider').slick({
	//autoplay: true,
	//autoplaySpeed: 4000000,
	adaptiveHeight: false,
	pauseOnHover: false,
	infinite: true,
	slidesToShow: 1,
	slidesToScroll: 1,
	fade: false,
	dots: false
});

//Слайдер видео
// $('.portfolio-slider').slick({
//     pauseOnHover: true,
//     autoplay: true,
//     autoplaySpeed: 4000,
//     adaptiveHeight: true,
// 	infinite: true,
// 	slidesToShow: 1,
// 	slidesToScroll: 1,
// 	fade: true,
// 	dots: false
// });

//Слайдер фото в два ряда
// $('.portfolio-slider-photo').slick({
// 	infinite: true,
// 	slidesToShow: 1,
// 	rows: 2,
// 	slidesPerRow: 4,
// 	autoplay: true,
// 	autoplaySpeed: 4000,
// 	fade: true,
// 	dots: false,
// 	responsive: [
// 		{
// 			breakpoint: 1200,
// 			settings: {
// 				slidesPerRow: 4
// 			}
// 		},
// 		{
// 			breakpoint: 700,
// 			settings: {
// 				slidesPerRow: 2
// 			}
// 		},
// 		{
// 			breakpoint: 500,
// 			settings: {
// 				slidesPerRow: 2
// 			}
// 		}
// 		// You can unslick at a given breakpoint now by adding:
// 		// settings: "unslick"
// 		// instead of a settings object
// 	]
// });

//Слайдер circle3 - кружки три в ряд
// $('.circle3-slider').slick({
// 	infinite: true,
// 	slidesToShow: 3,
// 	autoplay: true,
// 	autoplaySpeed: 4000,
// 	// fade: true,
// 	// dots: false,
// 	slidesToScroll: 1,
// 	responsive: [
// 		{
// 		breakpoint: 1200,
// 		settings: {
// 			slidesToShow: 3
// 		}
// 		},
// 		{
// 		breakpoint: 650,
// 		settings: {
// 			slidesToShow: 2
// 		}
// 		},
// 		{
// 		breakpoint: 400,
// 		settings: {
// 			slidesToShow: 1
// 		}
// 		}
// 		// You can unslick at a given breakpoint now by adding:
// 		// settings: "unslick"
// 		// instead of a settings object
// 	]
// });

//Слайдер партнеры
// $('.partners-wrapper').slick({
// 	infinite: true,
// 	slidesToShow: 5,
// 	autoplay: true,
// 	autoplaySpeed: 4000000,
// 	centerMode: true,
// 	variableWidth: true,
// 	// fade: true,
// 	// dots: false,
// 	slidesToScroll: 1,
// 	responsive: [
// 		{
// 		breakpoint: 1200,
// 		settings: {
// 			slidesToShow: 3
// 		}
// 		},
// 		{
// 		breakpoint: 650,
// 		settings: {
// 			slidesToShow: 2
// 		}
// 		},
// 		{
// 		breakpoint: 400,
// 		settings: {
// 			slidesToShow: 1
// 		}
// 		}
// 		// You can unslick at a given breakpoint now by adding:
// 		// settings: "unslick"
// 		// instead of a settings object
// 	]
// });

//Слайдер отзывы
$('.otzyvy-slider').slick({
	//dots: true,
	//autoplay: true,
	//autoplaySpeed: 4000,
	adaptiveHeight: true,
	infinite: true,
	slidesToShow: 1,
	slidesToScroll: 1,
	fade: false,
	dots: false
});
// Инициализация попапов
	// http://dimsemenov.com/plugins/magnific-popup/

//Попап обычный для картинок с галереей
$('.popup').magnificPopup({
	type: 'image',
	gallery: { enabled: true }
});

//Попап обычный для илайнового контента, например, для скрытых форм
$('.popup_content').magnificPopup({
	type: 'inline',
	midClick: true,
	showCloseBtn: true
});
//$('.popup_content.podpiska').click();

//Попап для видео
$('.magn-youtube, .magn-vimeo, .magn-gmaps').magnificPopup({
	disableOn: 150,
	type: 'iframe',
	mainClass: 'mfp-fade',
	removalDelay: 160,
	preloader: false,
	fixedContentPos: false
});

//Попап для ajax содержимого
$('.simple-ajax-popup').magnificPopup({
	type: 'ajax'
	// closeOnBgClick: false
});
// Валидация и отправка форм
	// Паттерны для валидации форм
var mail_pattern = /^[\.a-z0-9_-]+@[a-z0-9-]+\.[a-z]{2,8}$/i;
var tel_pattern = /^[\+0-9- \(\)]{5,25}$/;
var text_pattern = /^[\+a-zа-я0-9- \*\+\=\@\.\,\;\:\"\«\»\!\?\(\)\№\%]+$/i;

// Валидация обязательного поля для телефонов
$('.jsFormPhone').blur(function() {
	// console.log('Тег для $(this)  > ' + $(this).get(0).tagName); // Тег для $(this)
	if ($('.jsFormPhone').val() != '') {
		// Если поле заполнено
		if ($(this).val().search(tel_pattern) == 0) {
			// Если удовлетворяет паттерну
			$(this).addClass('succes');
		} else {
			// Если не удовлетворяет паттерну
			$(this).parent().addClass('error');
		}
	} else {
		$(this).parent().addClass('error');
		// $('.form .submit').attr('disabled', true);
	}
});

// Валидация обязательного поля для мейлов
$('.jsFormMail').blur(function() {
	if ($(this).val() != '') {
		// Если поле заполнено
		if ($(this).val().search(mail_pattern) == 0) {
			// Если удовлетворяет паттерну
			$(this).addClass('succes');
		} else {
			// Если не удовлетворяет паттерну
			$(this).parent().addClass('error');
		}
	} else {
		// Если поле пустое
		$(this).parent().addClass('error');
	}
});

// Валидация обязательного поля для текста
$('.jsFormText').blur(function() {
	if ($('.jsFormText').val() != '') {
		// Если поле заполнено
		if ($(this).val().search(text_pattern) == 0) {
			// Если удовлетворяет паттерну
			$(this).addClass('succes');
		} else {
			// Если не удовлетворяет паттерну
			$(this).parent().addClass('error');
		}
	} else {
		$(this).parent().addClass('error');
	}
});

// Проверка, возможна ли отправка. Если возможна, даем кнопке отправки класс submit
function form_succes() {
	// var required_polya = $('.form input[required]');
	var required_polya = $('.form [required]'); // обязательные input и textarea
	var form_succes; // для проверки, разрешена ли отправка
	var btn_submit;

	$(required_polya).blur(function() {
		// console.log('form input[required] > ' + $(this));
		// $(this).closest('.form').find('input[required]').each(function() {
		$(this).closest('.form').find('[required]').each(function() {
			// console.log('Класс родителя > ' + $(this).parent().attr('class')); // класс родителя для проверки, что есть $(this) - найденные обязательные поля
			form_succes = 1; // Изначально отправка возможна
			if ($(this).hasClass('succes')) {
			} else {
				// Если нет класса succes отправку запрещаем
				form_succes = 0;
			}
		});

		// Даем кнопке отправки класс submit если отправка разрешена
		var btn_submit = $(this).closest('.form').find('.submit');
		// console.log('btn_submit tag > ' + btn_submit.get(0).tagName);
		if (form_succes == 1) {
			// console.log('Отправка разрешена, делаем submit  > ' + $(this).get(0).tagName);
			btn_submit.attr('type', 'submit');
			// console.log('Отправка разрешена, делаем submit  > ' + $(this).closest('.form').find('.submit').prop('type'));
			// console.log($(this).closest('.form').find('.submit').attr('type'));
		} else {
			// console.log('Отправка не разрешена, делаем button  > ' + $(this).get(0).tagName);
			btn_submit.attr('type', 'button');
			// console.log('Отправка не разрешена, делаем button  > ' +
			// 		$(this).closest('.form').find('.submit').prop('type')
			// );
		}
	});
}

form_succes(); // Вызов проверки возможности отправки формы

// Проверяем наличие незаполненных обязательных полей по клику на .submit
$(function() {
	$('.submit').click(function() {
		// Определяем обязательные поля и чекбоксы
		// var required_polya = $(this).closest('.form').children('.before').children('input[required]');
		var required_polya = $(this).closest('.form').children('.before').children('[required]');
		var required_checkbox = $(this).closest('.form').find('input[type="checkbox"][required]');

		// Для каждого найденного пустого поля
		$(required_polya).each(function() {
			if ($.trim(required_polya.val()) == '') {
				$(this).parent().addClass('error');
			}
		});

		// Для незаполненного чекбокса политики
		$(required_checkbox).each(function() {
			if (required_checkbox.prop('checked') == false) {
				$(this).addClass('error').parent('').addClass('error');
			} else {
				$(this).removeClass('error').addClass('succes').parent('').removeClass('error');
			}
		});
	});
});

// Раздаем класс succes обязательным заполненным чекбоксам
$(function() {
	// Раздаем класс succes обязательным заполненным чекбоксам
	var required_checkbox = $('input[type="checkbox"][required]');
	$(required_checkbox).change(function() {
		// отслеживаем изменение чекбокса
		if ($(this).prop('checked') == false) {
			$(this).removeClass('succes');
		} else {
			$(this).addClass('succes'); // Для заполненного чекбокса
		}
	});
});

// Убираем классы error у элементов в фокусе
$('input, textarea').focus(function() {
	$(this).removeClass('error').parent().removeClass('error');
});

//Отправка формы для заказа звонка #zayavka
$('#zayavka').submit(function() {
	$.ajax({
		type: 'POST',
		url: 'mail.php',
		data: $(this).serialize()
	}).done(function() {
		// выполнить после успешной отправки
		$(this).find('input').val('');
		// alert("Спасибо за заявку! Скоро мы с вами свяжемся."); // Сообщение в виде стандартного алерта
		$('#zayavka').trigger('reset');

		$.magnificPopup.close(); // Закрыть открытые попапы
		// Создать попап со своим инлайновым содержимым
		$.magnificPopup.open(
			{
				items: {
					src: '<div class="white-popup-block">Письмо успешно отправлено.<br>Спасибо за заявку!</div>'
				},
				removalDelay: 3000,
				showCloseBtn: true,
				type: 'inline'
			},
			0
		);
		$.magnificPopup.close();
	});
	return false;
});

//Отправка формы обратной связи #zayavka2
$('#zayavka2').submit(function() {
	$.ajax({
		type: 'POST',
		url: 'mail2.php',
		data: $(this).serialize()
	}).done(function() {
		// выполнить после успешной отправки
		$(this).find('input').val('');
		// alert("Спасибо за заявку! Скоро мы с вами свяжемся."); // Сообщение в виде стандартного алерта
		$('#zayavka2').trigger('reset');

		$.magnificPopup.close(); // Закрыть открытые попапы
		// Создать попап со своим инлайновым содержимым
		$.magnificPopup.open(
			{
				items: {
					src: '<div class="white-popup-block">Письмо успешно отправлено.<br>Спасибо за заявку!</div>'
				},
				removalDelay: 3000,
				showCloseBtn: true,
				type: 'inline'
			},
			0
		);
		$.magnificPopup.close();
	});
	return false;
});
// FAQ аккордион
	$('.accordeon .descr').hide().prev().click(function() {
	$(this).parents('.accordeon').find('.descr').not(this).slideUp().prev().removeClass('active');
	$(this).next().not(':visible').slideDown().prev().addClass('active');
});
// Анимация цифр
	var show = true;
var countbox = '.advantages-container';
$(window).on('scroll load resize', function() {
	if (!show) return false; // Отменяем показ анимации, если она уже была выполнена
	var w_top = $(window).scrollTop(); // Количество пикселей на которое была прокручена страница
	var e_top = $(countbox).offset().top; // Расстояние от блока со счетчиками до верха всего документа
	var w_height = $(window).height(); // Высота окна браузера
	var d_height = $(document).height(); // Высота всего документа
	var e_height = $(countbox).outerHeight(); // Полная высота блока со счетчиками
	if (w_top + 500 >= e_top || w_height + w_top == d_height || e_height + e_top < w_height) {
		$('.advantages-number').css('opacity', '1');
		$('.advantages-number').spincrement({
			thousandSeparator: ' ',
			duration: 1200
		});

		show = false;
	}
});
// Скролл вверх
	//Плавный скролинг до блока
$(function() {
	$('.arrow-top').click(function() {
		var _href = $(this).attr('href');
		$('html, body').animate({ scrollTop: $(_href).offset().top + 'px' }, 1500);
		return false;
	});
});
// adaptive-table.js
	// Если ширина таблицы больше доступной области отображения, то ширину эмулируемой полосы прокрутки делаем равной ширине таблицы. Иначе скрываем эмулируемую полосу прокрутки сверху

function adaptiveTable() {
	var adaptiveTableWrapper = $('.adaptive-table-wrapper'); // обертка таблицы
	var table = $('table');
	var scrollWrapper = $('.scroll-wrapper'); // обертка псевдо полосы прокрутки

	table.each(function() {
		var widthTable = $(this).width(); // ширина таблицы
		var widthAdaptiveTableWrapper = $(this).closest(adaptiveTableWrapper).width(); // ширина обертки таблицы
		var scrollWrapper = $(this).closest(adaptiveTableWrapper).prev(scrollWrapper); // выбираем обертку эмулиремой полосы прокрутки
		var scrollInner = $(this).closest(adaptiveTableWrapper).prev(scrollWrapper).find('.scroll-inner');

		scrollInner.width(widthTable); // ширину псевдо полосы прокрутки делаем равной ширине таблицы

		if (widthTable > widthAdaptiveTableWrapper) { // если ширина таблицы больше ширины ее обертки
			scrollWrapper.css('display', 'block'); // то показываем эмулируемую полосу прокрутки
		} else {
			scrollWrapper.css('display', 'none'); // иначе скрываем эмулируемую полосу прокрутки
		}
	});
}

adaptiveTable(); // Вызов функции adaptiveTable для первичной отработки

// Повторный вызов функции adaptiveTable при ресайзе окна
$(window).resize(function() {
	adaptiveTable();
});

// при прокрутке псевдо полосы прокрутки проскролить обертку этой же таблицы на такое же значение
$('.scroll-wrapper').on('scroll', function (e) {
	let positionX = $(this).scrollLeft();
	$(this).next(".adaptive-table-wrapper").scrollLeft(positionX);
});

// при прокрутке обертки таблицы проскролить псевдо полосу прокрутки этой же таблицы на такое же значение
$('.adaptive-table-wrapper').on('scroll', function (e) {
	let positionX = $(this).scrollLeft();
	$(this).prev(".scroll-wrapper").scrollLeft(positionX);
});

// Для проверки значений переменных
// console.log('positionX > ' + positionX);
});
$(window).on('load', function() {
	// $('.preloader').delay(500).fadeOut('slow');
	$('.preloader').delay(0).fadeOut('slow');
});

// $('.preloader').delay(500).fadeOut('slow');
